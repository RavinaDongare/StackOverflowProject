@model StackOverflowProject.ViewModels.QuestionViewModel

@{
    ViewBag.Title = "View Question";
}
<div class="row">
    <div class="col-sm-12" style="--bs-gutter-x:6.5rem">
        <div class="form-group form-row jumbotron">
            <div class="col-sm-10 offset-sm-2">
                <h3> @Model.QuestionName</h3>
            </div>
            <div class="row">
                <div class="col-sm-2" style="text-align: center">
                    <span class="badge bg-info">
                        @Model.Category.CategoryName
                    </span>
                </div>
                <div class="col-sm-2">
                    <span class="text-info">

                        @if (Convert.ToInt32(Session["CurrentUserId"]) != @Model.User.UserID)
                        {
                            @:by @Model.User.Name
                        }
                        else
                        {
                            @:by you

                        }

                    </span>
                </div>

                <div class="col-sm-3">
                    <span class="text-success">
                        on @Model.QuestionDateAndTime
                    </span>

                </div>
                <div class="col-sm-2">
                    <span class="badge rounded-pill bg-success col-2">
                        @Model.ViewsCount
                    </span>
                    Views
                </div>

                    @if (Model.AnswersCount == 0)
                    {
                        
                    <p class="text-danger" style="text-align:center !important;margin:10px">No Answer Yet </p>
                    }
              
                
            </div>

        </div>
        @for (int i = 0; i < Model.AnswersCount; i++)
        {
            <div class="form-group form-row">
                <div class="row">
                    <div class="col-sm-2">
                        <span class="badge bg-secondary col-2 votescount">
                            @Model.Answers[i].VotesCount
                        </span>
                        Votes
                        @if (Session["CurrentUserName"] != null && Convert.ToInt32(Session["CurrentUserId"]) != Model.Answers[i].UserID)
                        {
                            if (Model.Answers[i].CurrentUserVoteType == 1)
                            {
                                <img src="~/Images/up-color.png" class="btnUpVote" style="cursor:pointer;width:20px" data-answerid="@Model.Answers[i].AnswerID" />
                                <img src="~/Images/down-empty.png" class="btndownVote" style="cursor:pointer;width:20px" data-answerid="@Model.Answers[i].AnswerID" />
                            }
                            else if (Model.Answers[i].CurrentUserVoteType == -1)
                            {
                                <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer;width:20px" data-answerid="@Model.Answers[i].AnswerID" />
                                <img src="~/Images/down-color.png" class="btndownVote" style="cursor:pointer;width:20px" data-answerid="@Model.Answers[i].AnswerID" />
                            }
                            else
                            {
                                <img src="~/Images/up-empty.png" class="btnUpVote" style="cursor:pointer;width:20px" data-answerid="@Model.Answers[i].AnswerID" />
                                <img src="~/Images/down-empty.png" class="btndownVote" style="cursor:pointer;width:20px" data-answerid="@Model.Answers[i].AnswerID" />
                            }

                        }


                    </div>
                    <div class="col-sm-5">
                        @if (Convert.ToInt32(Session["CurrentUserId"]) != Model.Answers[i].UserID)
                        {
                            @Model.Answers[i].AnswerTest
                        }
                        else
                        {
                            <p class="answer">@Model.Answers[i].AnswerTest</p>
                            <button class="btn btn-info editbutton">Edit </button>
                            <form class="needs-validation hidden" novalidate="novalidate" action="/Questions/EditAnswers" method="post">
                                @*<div class="form-group form-row">*@
                                <div class="col-sm-12">
                                    <h4> Edit your answer</h4>
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="AnswerID" value="@Model.Answers[i].AnswerID" />
                                    <input type="hidden" name="QuestionID" value="@Model.Answers[i].QuestionID" />
                                    <div class="form-row">
                                        <div class="form-group col-sm-12">
                                            <textarea class="form-control" id="txtAnswer" placeholder="Enter Answer" name="AnswerTest" required="required">
                                               @Model.Answers[i].AnswerTest
                                           </textarea>
                                            <div class="valid-feedback">
                                                Looks Good !
                                            </div>
                                            <div class="invalid-feedback">
                                                Please Enter Answer.
                                            </div>
                                        </div>

                                    </div>
                                    <button type="submit" class="btn btn-primary">Update Answer</button>
                                    <div class="text-danger">@Html.ValidationSummary()</div>
                                </div>
                                @*</div>*@
                            </form>
                        }




                    </div>
                    <div class="col-sm-2">
                        <span>
                            @if (Convert.ToInt32(Session["CurrentUserId"]) != Model.Answers[i].UserID)
                            {
                                @:by @Model.Answers[i].User.Name
                            }
                            else
                            {
                                @:by you
                            }
                        </span>
                    </div>
                    <div class="col-sm-3">
                        on @Model.Answers[i].AnswerDateTime
                    </div>

                </div>
            </div>
        }
            
        </div>
    </div>
<div class="row">
    <div class="col-sm-12" style="--bs-gutter-x:6.5rem">
        @if (Session["CurrentUserName"] != null)
        {
            <form class="needs-validation" novalidate="novalidate" action="/Questions/AddAnswer" method="post">
                <div class="form-group form-row">
                    <div class="col-sm-12">
                        <h4> Add your answer</h4>
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="QuestionId" value="@Model.QuestionId" />

                        <div class="form-row">
                            <div class="form-group col-sm-12">
                                <textarea class="form-control" id="txtAnswer" placeholder="Enter Answer" name="AnswerTest" required="required"></textarea>


                                <div class="valid-feedback">
                                    Looks Good !
                                </div>
                                <div class="invalid-feedback">
                                    Please Enter Answer.
                                </div>
                            </div>

                        </div>
                        <button type="submit" class="btn btn-primary" style="margin-top:20px">Add Answer</button>
                        <div class="text-danger">
                            @Html.ValidationSummary()

                        </div>

                    </div>
                </div>
            </form>
        }
    </div>
    


        @*</div>*@

    </div>
    <script>
    $("a[href = '/Questions/View']").addClass("active");


    $(".btnUpVote").on("click",function ()
    {
        var upbtn = $(this);
         var downbtn = upbtn.parent().find(".btndownVote");
        if (upbtn.attr("src") == "/Images/up-empty.png") {
            var value;
            if (upbtn.attr("src") == "/Images/up-empty.png" && downbtn.attr("src") == "/Images/down-empty.png") {

                value = 1;
            }
            else {
                value = 2;
            }

            $.ajax({
                url: "/api/Question?AnswerID=" + upbtn.attr("data-answerid") + "&UserID=@Session["CurrentUserId"]" + "&value=" + value, type: "POST",
                success: function (d) {
                    upbtn.parent().find(".votescount").text(parseInt(upbtn.parent().find(".votescount").text()) + value);
                    upbtn.attr("src", "/Images/up-color.png");
                    downbtn.attr("src", "/Images/down-empty.png");
                },
                error: function () {

                }
            });

        }
        else {

        }



    });


    $(".btndownVote").on("click",function ()
    {

        var downbtn  = $(this);
        var upbtn = downbtn.parent().find(".btnUpVote");
        if (downbtn.attr("src") == "/Images/down-empty.png")
        {
             var value;
            if (upbtn.attr("src") == "/Images/up-empty.png" && downbtn.attr("src") == "/Images/down-empty.png") {

                value = -1;
            }
            else {
                value = -2;
            }

            $.ajax({
                url: "/api/Question?AnswerID=" + upbtn.attr("data-answerid") + "&UserID=@Session["CurrentUserId"]"+ "&value=" + value, type: "POST",
                success: function (d) {
                    downbtn.parent().find(".votescount").text(parseInt(downbtn.parent().find(".votescount").text()) + value);
                    downbtn.attr("src", "/Images/down-color.png");
                    upbtn.attr("src", "/Images/up-empty.png");
                },
                error: function () {

                }
            });

        }



    });



    </script>

    <script>

        $(".editbutton").on("click", function () {


            $(this).parent().find(".needs-validation").show();
            $(this).hide();
            $(this).parent().find(".answer").hide();


        });


    </script>
